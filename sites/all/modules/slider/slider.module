<?php

/**
 * @package Slider - Adodis Drupal Theme
 * @version 1.1 November 25, 2010
 * @author Adodis Theme http://www.drupal-themes.adodis.com
 * @copyright Copyright (C) 2010 Adodis Drupal Theme
 * @license http://www.gnu.org/licenses/gpl-2.0.html GNU/GPLv2 only
 */

/**
 * @file
 * Enables the use of personal and site-wide contact forms.
 */

/**
 * Implements hook_help().
 */
function slider_help($path, $arg) {
	  switch ($path) {
	    case 'admin/help#slider':
	      $output = '';
	      $output .= '<h3>' . t('About') . '</h3>';
	      $output .= '<p>' . t('The Contact module allows visitors to create and view the slideshow based on the jquery scripts') . '</p>';
	      return $output;
	   case 'admin/structure/slider/add':
	      return '<p>' . t('Use this page to create a new slider show.') . '</p>';
	  }
}

/**
 * Implements hook_permission().
 */
function slider_permission() {
	  return array(
	      'access user slider forms' => array(
	      'title' => t("access slideshow form"),
	    ),
	  );
}

/**
 * Implements hook_menu().
 */
function slider_menu() {

	  $items['admin/structure/slider'] = array(
	    'title' => 'slider',
	   'page callback' => 'slider_form_fetch',
	    //'page arguments' => array('slider_form_fetch'),
	    'access arguments' => array('access user slider forms'),

	  );
	  $items['admin/structure/slider/add'] = array(
	    'title' => 'slider',
	    'page callback' => 'drupal_get_form',
	    'page arguments' => array('slider_form'),
	    'access arguments' => array('access user slider forms'),

	  );
	  $items['admin/structure/slider/edit/%'] = array(
	    'title' => 'slider',
	    'page callback' => 'drupal_get_form',
	    'page arguments' => array('slider_form_edit',4),
	    'access arguments' => array('access user slider forms'),

	  );
	 $items['admin/structure/slider/delete/%'] = array(
	    'title' => 'slider',
	    'page callback' => 'drupal_get_form',
	    'page arguments' => array('slider_form_delete',4),
	    'access arguments' => array('access user slider forms'),

	  );
	  return $items;
}

/**
 * Implements hook_form().
 */
function slider_form()
{
		$form['title'] = array
		(
	    '#type' => 'textfield',
	    '#size' => 60,
	    '#maxlength' => 128,
	    '#title' => t('Title'),
	    '#default_value' => !empty($node->title) ? $node->title : '',
	    '#required' => TRUE,
	    );

	    $form['category'] = array
	    (
	    '#type' => 'file',
	    '#title' => t('Image upload'),
	     '#description'=>t('File size limit is 2MB.Valid extensions are jpg,gif,png'),
	    );
	    $form['path'] = array(
	    '#type' => 'textfield',
	    '#size' => 60,
	    '#maxlength' => 128,
	    '#title' => t('Path'),
	    '#default_value' => '',
	    '#description' =>t('please provide the node id for pointing to the particular node content'),
	    '#required' => TRUE,
	    );
	    $form['id'] = array(
	    '#type' => 'hidden',
	    '#size' => 60,
	    '#maxlength' => 12,
	    '#title' => t('id'),
	    //'#default_value' => '',
	    );

		$form['actions'] = array('#type' => 'actions');
		$form['actions']['submit'] = array
		(
		    '#type' => 'submit',
		    '#value' => t('Submit'),
		);
	   return $form;
}
/**
 * Form submission handler for slider_form().here we perform both validation and submission
 */
function slider_form_submit($form, &$form_state)
{

	  $var=array('jpg', 'png', 'gif');
	  if(isset($form_state['values']['category']))
	  {

	    $limits = array( 'extensions' => 'jpg png gif', 'file_size' => 200000000);
	    $validators = array('file_validate_extensions' => array($limits['extensions']),);
	    $test =  file_default_scheme() . '://slideshow';
	    if(!file_prepare_directory($test,'0777'))
	    {
	    	form_set_error('Folder Creation', t('Please make a directory to upload the image.'));
	    }
	     if ( $file = file_save_upload('category', $validators, $test,$replace = FILE_EXISTS_RENAME))
	     {
	       $_file_name=$file->filename;
	       $query = db_insert('slider_upload')->fields(array('title','image_path','path'));
		   $query->values(array(
		        'title' => $form_state['values']['title'],
				'image_path' => $_file_name,
				'path' => $form_state['values']['path'],

			  ));
		   $query->execute();
	       $pieces1 = explode(".", $_file_name);
	       $var1=in_array($pieces1[1],$var);
	       $form_state['redirect'] = 'admin/structure/slider';

	     }
	     else
	     {
		   form_set_error('fileupload', t('Your file should be in valid format.'));
	     }
	  }
}
function slider_preprocess_page(&$variables)
{
		global $base_url;
	    $output='';
	    $output.='<div class="main_view">';
	    $output.='<div class="window">';
	    $output.='<div class="image_reel">';
	    $result= db_query("SELECT title,image_path, path FROM {slider_upload}")->fetchAll();
	    foreach ($result as $row)
	    {
	      $output.='<a href="'.$base_url.'/node/'.$row->path.'" title="'.$row->title.'"><img src="'.$base_url.'/sites/default/files/slideshow/'.$row->image_path.'" alt="'.$row->title.'" /></a>';
	    }
	      $output.='</div>';
	      $output.='</div>';
	      $output.='<div class="paging">';

	   for($slide=1;$slide<=count($result);$slide++)
	   {
	     $output.='<a href="#" rel="'.$slide.'" title="'.$slide.'">'.$slide.'</a>';
	   }

	    $output.='</div>';
	    $output.='</div>';
	    $variables['slideshow']=$output;
}
function slider_form_fetch()
{

		$output='';
		$output.='<h6>'.l(t('Add slide'), 'admin/structure/slider/add').'</h6> ';
		$result= db_query("SELECT * FROM {slider_upload}")->fetchAll();
		$rows = array();
		$output.='<table id="slide">';

		$output.='<tr>';
		$output.='<th>Title</th>';
		$output.='<th>Image</th>';
		$output.='<th colspan="2">Operations</th>';
		$output.='</tr>';

		foreach ($result as $category)
		{
		$output.='<tr>';
		$output.= drupal_add_tabledrag('slide', 'order', 'sibling','');
		$output.='<td>'.$category->title.'</td>';
		$output.='<td>'.$category->image_path.'</td>';
		$output.='<td>'.l(t('edit'), 'admin/structure/slider/edit/' . $category->id).'</td>';
		$output.='<td>'.l(t('delete'), 'admin/structure/slider/delete/' . $category->id).'</td>';
		$output.='</tr>';
		}
		$output.='</table>';
		return $output;
}

/* Implement hook_form_delete */
function slider_form_delete($form_state,$register)
{
	   $reg1= $register['build_info']['args'][0];
	   $form['id'] = array
	   (
	   '#type' => 'hidden',
	   '#value' => $reg1,
	   );
	    return confirm_form($form, t('Are you sure you want to delete this slide?', array('%' => $reg1['type'])), 'admin/structure/slider', t('This action cannot be undone.'), t('Delete'), t('Cancel'));
}
function slider_form_delete_submit($form, $form_state)
{
	  db_delete('slider_upload')
	  ->condition('id',$form_state['values']['id'])
	  ->execute();
	  drupal_set_message(t('record is deleted.'));
	  drupal_goto('admin/structure/slider');
	  return;
}

/* Implement hook_form_edit */

function slider_form_edit($form_state,$register)
{
	  $result=db_query("SELECT * FROM {slider_upload} WHERE id =:id", array(
					':id' =>$register['build_info']['args'][0],
				  ))->fetchAll();
	  foreach ($result as $row)
	  {
	    $form['title'] = array
		(
	    '#type' => 'textfield',
	    '#size' => 60,
	    '#maxlength' => 128,
	    '#title' => t('Title'),
	    '#default_value' =>$row->title,
	    '#required' => TRUE,

	   );

	   $form['category'] = array
	   (
	    '#type' => 'file',
	    '#title' => t('Image upload'),
	    //'#default_value' =>$row->image_path,
	    '#description'=>t('File size limit is 2MB.Valid extensions are jpg,gif,png'),

	   );
	  $form['path'] = array(
	    '#type' => 'textfield',
	    '#size' => 60,
	    '#maxlength' => 128,
	    '#title' => t('Path'),
	    '#default_value' =>$row->path,
	    '#description' =>t('please provide the node id for pointing to the particular node content'),
	    '#required' => TRUE,
	  );
	  $form['id'] = array(
	    '#type' => 'hidden',
	    '#size' => 60,
	    '#maxlength' => 12,
	    '#title' => t('id'),
	    '#default_value' => $row->id,
	  );
	  $form['image_name'] = array(
	    '#type' => 'hidden',
	    '#size' => 60,
	    '#maxlength' => 128,
	    '#title' => t('image name'),
	    '#default_value' => $row->image_path,

	  );
	 $form['actions'] = array('#type' => 'actions');
	  $form['actions']['submit'] = array(
	    '#type' => 'submit',
	    '#value' => t('Submit'),
	  );

	  }
	  return $form;
}
function slider_form_edit_submit($form, &$form_state)
{
	  $var=array('jpg', 'png', 'gif');
	  if(isset($form_state['values']['category']))
	  {

	    $limits = array( 'extensions' => 'jpg png gif', 'file_size' => 200000000);
	    $validators = array('file_validate_extensions' => array($limits['extensions']),);
	    $test =  file_default_scheme() . '://slideshow';
	    if(!file_prepare_directory($test,'0777'))
	    {
	    	form_set_error('Folder Creation', t('Please make a directory to upload the image.'));
	    }

	    if($_FILES['files']['name']['category']){
	     if ( $file = file_save_upload('category', $validators, $test,$replace = FILE_EXISTS_RENAME))
	     {
	     	$_file_name=$file->filename;
	     }
	     else
	     {
		   form_set_error('fileupload', t('Your file  should be in valid format.'));
	     }
	    }
	    else
	    {
			$_file_name=$form_state['values']['image_name'];
	    }


	       $query = db_update('slider_upload')
	       ->fields(array('title' => $form_state['values']['title'],'image_path' => $_file_name,'path' => $form_state['values']['path']))
		   ->condition('id',$form_state['values']['id'])
	       ->execute();
	       $form_state['redirect'] = 'admin/structure/slider';
	  }
}